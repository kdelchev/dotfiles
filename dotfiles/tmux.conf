if-shell "type 'reattach-to-user-namespace' >/dev/null" "set -g default-command 'reattach-to-user-namespace -l $SHELL'"

set-option -g prefix C-a
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g history-limit 1000
set-option -g default-terminal 'screen-256color'
set-option -sg escape-time 0
set-option -g renumber-windows on
set-option -g set-titles on
set-option -g set-titles-string '#(whoami)::#h::#(curl ipecho.net/plain;echo)'
set-option -g status-keys vi
set-option -g mouse on

set-window-option -g monitor-activity on
set-window-option -g visual-activity on
set-window-option -g automatic-rename on
set-window-option -g mode-keys vi

# Use v and y keys for visual select mode and copying
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"

# Copy mouse selection to clipboard
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

bind-key M split-window -h "vim ~/.tmux.conf"
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key v split-window -h
bind-key s split-window


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "resize-pane -L 10"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "resize-pane -R 10"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "resize-pane -U 5"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "resize-pane -D 5"

bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

bind-key -n M-[ previous-window
bind-key -n M-] next-window

# Easy window selection
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

bind-key r send-keys 'C-l'
bind-key k send-keys -R \; send-keys C-l \; clear-history \; send-keys

# Load custom status bar
if-shell "test -f ~/.tmux-statusbar.conf" "source ~/.tmux-statusbar.conf"

# rm mouse mode fail
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 1\)' 'set -g mouse off'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 1\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g mode-mouse off'

# Swap windows
bind-key -n S-Left swap-window -t -1
bind-key -n S-Right swap-window -t +1

bind-key s split-window -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'
bind-key c new-window -c '#{pane_current_path}'
